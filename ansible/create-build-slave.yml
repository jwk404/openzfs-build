---
#
# When using long strings for the DCenter instance name, there's cases
# where Ansible will fail to connect to the system when attempting to
# run the "host: openzfs-jenkins-slave" roles below. Thus, we can't
# simply use the "jenkins_name" variable that will be passed into this
# playbook (by the calling using "--extra-vars"), since that could
# potentially be "too long".
#
# As a workaround, we create a pseudo random name for the instance here,
# that is short enough to keep Ansible happy (i.e. able to apply the
# roles below) and unique enough to prevent conflicts (DCenter instance
# names must be unique).
#
# To allow the Jenkins job that calls this playbook a mechanism to
# determine this DCenter instance name used, we create a properties file
# that includes the instance name. This file can then be ingested by the
# Jenkins job, importing the DC_INSTANCE_NAME environment variable into
# the running job in the process. Without this properties file, the
# Jenkins job would not be able to destroy this instance, since the
# instance name is needed to perform the destroy operation.
#
# Also note, we persist the instance name prior to actually creating and
# configuring the instance. In the event of an error, we still want to
# allow the Jenkins job to clean up the instance, so we need to write
# out this information before an error can occur.
#
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Generate random suffix for DCenter instance name
      shell: "date +%s | md5sum | cut -c 1-8"
      register: rand
    - name: Generate DCenter instance name using random suffix
      shell: "echo openzfs-{{ rand.stdout }}"
      register: name
    - name: Write DCenter instance property file
      copy:
        dest: "{{ properties_path }}"
        content: "DC_INSTANCE_NAME={{ name.stdout }}"
      when: properties_path is defined and "{{ properties_path }}" != ""

- hosts: dcenter.delphix.com
  vars:
    add_to_ansible_group: "openzfs-jenkins-slave"
    instance_user: "{{ omnios_ssh_user }}"
    instance_pass: "{{ omnios_ssh_pass }}"
    instance_name: "{{ hostvars.localhost.name.stdout }}"
    image: "openzfs-r151014"
  roles:
    - omnios-credentials
    - create-dc-instance

- hosts: openzfs-jenkins-slave
  vars:
    jenkins_master: "http://psurya-jenkins.dcenter.delphix.com:8080"
    jenkins_label: "openzfs-build-slave"
    jenkins_name: "{{ hostvars.localhost.name.stdout }}"
  roles:
    - initialize-omnios
    - openzfs-jenkins-slave
